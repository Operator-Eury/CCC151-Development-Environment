package landingPageDashboard;
import signInForm.signInFormHandler;
import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

public class landingPage extends JFrame {
    private JPanel landingPagePanel;
    private JTextArea welcomeMessage;
    private JButton studentAccessorButton;
    private JButton adminAccessorButton;
    private JPanel accessorButtonsPanel;
    private JPanel divPanel;
    private JPanel welcomeMessagePanel;
    private JPanel videoPlaceHolderPanel;

    public landingPage() {
        setTitle("FrostyBytes Database");
        setResizable(false);
        setVisible(true);
        setMinimumSize(new Dimension(425, 350));
        setContentPane(landingPagePanel);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();
        setLocationRelativeTo(null);

        studentAccessorButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                signInFormHandler signInFormHandler = new signInFormHandler(landingPage.this); //creating a JDialog object
                signInFormHandler.setVisible(true);
            }
        });

        adminAccessorButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                signInFormHandler signInFormHandler = new signInFormHandler(landingPage.this);
                signInFormHandler.setVisible(true);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        landingPagePanel = new JPanel();
        landingPagePanel.setLayout(new GridBagLayout());
        landingPagePanel.setFocusable(false);
        landingPagePanel.setMaximumSize(new Dimension(500, 200));
        landingPagePanel.setMinimumSize(new Dimension(-1, -1));
        landingPagePanel.setPreferredSize(new Dimension(300, 125));
        landingPagePanel.setRequestFocusEnabled(false);
        landingPagePanel.setVerifyInputWhenFocusTarget(false);
        accessorButtonsPanel = new JPanel();
        accessorButtonsPanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 10, 0);
        landingPagePanel.add(accessorButtonsPanel, gbc);
        studentAccessorButton = new JButton();
        studentAccessorButton.setFocusPainted(false);
        Font studentAccessorButtonFont = this.$$$getFont$$$(null, -1, 17, studentAccessorButton.getFont());
        if (studentAccessorButtonFont != null) studentAccessorButton.setFont(studentAccessorButtonFont);
        studentAccessorButton.setHorizontalTextPosition(11);
        studentAccessorButton.setLabel("I am a student");
        studentAccessorButton.setRequestFocusEnabled(false);
        studentAccessorButton.setRolloverEnabled(false);
        studentAccessorButton.setText("I am a student");
        studentAccessorButton.setVerifyInputWhenFocusTarget(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        accessorButtonsPanel.add(studentAccessorButton, gbc);
        adminAccessorButton = new JButton();
        adminAccessorButton.setFocusPainted(false);
        adminAccessorButton.setFocusable(false);
        Font adminAccessorButtonFont = this.$$$getFont$$$(null, -1, 17, adminAccessorButton.getFont());
        if (adminAccessorButtonFont != null) adminAccessorButton.setFont(adminAccessorButtonFont);
        adminAccessorButton.setLabel("I am an admin");
        adminAccessorButton.setRequestFocusEnabled(false);
        adminAccessorButton.setRolloverEnabled(false);
        adminAccessorButton.setText("I am an admin");
        adminAccessorButton.setVerifyInputWhenFocusTarget(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        accessorButtonsPanel.add(adminAccessorButton, gbc);
        divPanel = new JPanel();
        divPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        accessorButtonsPanel.add(divPanel, gbc);
        welcomeMessagePanel = new JPanel();
        welcomeMessagePanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.gridheight = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.insets = new Insets(10, 0, 0, 0);
        landingPagePanel.add(welcomeMessagePanel, gbc);
        welcomeMessage = new JTextArea();
        welcomeMessage.setAutoscrolls(false);
        welcomeMessage.setEditable(false);
        welcomeMessage.setEnabled(true);
        welcomeMessage.setFocusable(false);
        Font welcomeMessageFont = this.$$$getFont$$$(null, Font.BOLD, 19, welcomeMessage.getFont());
        if (welcomeMessageFont != null) welcomeMessage.setFont(welcomeMessageFont);
        welcomeMessage.setOpaque(false);
        welcomeMessage.setRequestFocusEnabled(false);
        welcomeMessage.setText("FrostyBytes University Student Database");
        welcomeMessage.setVerifyInputWhenFocusTarget(false);
        welcomeMessage.setWrapStyleWord(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        welcomeMessagePanel.add(welcomeMessage, gbc);
        videoPlaceHolderPanel = new JPanel();
        videoPlaceHolderPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        landingPagePanel.add(videoPlaceHolderPanel, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return landingPagePanel;
    }

}
